{"version":3,"sources":["componet/Navbar.js","componet/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","switch","Textform","handleItClick","console","log","ullu","newText","toItalicCase","setCont","_useState","useState","_useState2","Object","slicedToArray","Fragment","heading","value","onChange","event","target","rows","toUpperCase","toLowerCase","toClear","App","setMode","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.86eb6d63.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props){\r\n    return(\r\n             <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\" \">About</a>\r\n        </li>\r\n      </ul>\r\n     {/* ?\\ <form className=\"d-flex\" role=\"search\"> */}\r\n        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> */}\r\n        {/* <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n      {/* </form> */}\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.switch}</label>\r\n</div>\r\n  </div>\r\n \r\n</nav>\r\n    );\r\n}","\r\nimport React, {useState}  from  'react'\r\n\r\nexport default function Textform(props){\r\n  \r\n  const handleUpClick = () => {\r\n    console.log(\"Uppercase was clicked\");\r\n    let newText = ullu.toUpperCase();\r\n    setCont(newText)\r\n}\r\n  const handleItClick =() => {\r\n    console.log('Button Was Click' + ullu);\r\n    let newText = ullu.toItalicCase();\r\n    setCont(newText);\r\n  }\r\n  const handleLoClick =() => {\r\n    console.log('Button Was Click' + ullu);\r\n    let newText = ullu.toLowerCase();\r\n    setCont(newText);\r\n  }\r\n  const handleOnChange =(event) =>{\r\n    console.log('Value Change');  \r\n    setCont(event.target.value);\r\n  }\r\n  const handleClick =(event) =>{\r\n    console.log('Button Was CLick' + ullu);  \r\n    let newText = ullu.toClear();\r\n    setCont(newText);\r\n  }\r\n  const [ullu,setCont] = useState();  \r\n    return(\r\n      <>\r\n      <form>\r\n          <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={ullu} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-danger mx-2\" onClick={handleUpClick} > Convert To Upercase</button>\r\n      <button className=\"btn btn-success mx-2\" onClick={handleLoClick} > Convert To Lowercase</button>\r\n      <button className=\"btn btn-info mx-2\" onClick={handleClick} > Clear Text</button>\r\n      <button className=\"btn btn-dark mx-2\" onClick={handleItClick}>Convert to Italic</button>\r\n      <button className=\"btn btn-secondary mx-2\" onClick={handleItClick}>Convert to Bold</button>\r\n      <button className=\"btn btn-warning mx-2\" onClick={handleItClick}>Remove Extra Space</button>\r\n\r\n\r\n\r\n\r\n      </form>\r\n      <div className=\"container my-4\">\r\n        <h1>Your Text Summary</h1>\r\n        {/* <p>{ullu.split(\" \").length}word and {ullu.length} charcter</p> */}\r\n        {/* <p>{0.008 * ullu.split(\" \").length} Minute Take To read</p> */}\r\n        <h2>Preview Your Text</h2>\r\n        <p>{ullu}</p>\r\n      </div>\r\n      </>\r\n    );\r\n}","import React, {useState}  from  'react'\n// import './App.css';\n//  import About from './componet/About'\nimport Navbar from './componet/Navbar'\n  import Textform from './componet/Textform'\n   \n\n\n\nfunction App() {\n  const [mode , setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n        setMode('dark');\n        document.body.style.backgroundColor = 'gray';\n    }\n    else {\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n    }\n};\n\n \n  return (\n <>\n  \n    \n  <Navbar title=\"TextUtil\" mode={mode} toggleMode={toggleMode} switch=\"Enble Dark Mode\"/>\n\n  <div className=\"container my-4\" > \n   {/* <About/> */}\n        <Textform heading=\"Enter Text To Anlayz\"/> \n  </div>\n  \n  </>\n );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}